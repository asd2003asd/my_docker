FROM alpine:latest

LABEL maintainer "bao3.cn@gmail.com"

ADD https://storage.googleapis.com/v2ray-docker/v2ray /usr/bin/v2ray/
ADD https://storage.googleapis.com/v2ray-docker/v2ctl /usr/bin/v2ray/
ADD https://storage.googleapis.com/v2ray-docker/geoip.dat /usr/bin/v2ray/
ADD https://storage.googleapis.com/v2ray-docker/geosite.dat /usr/bin/v2ray/
RUN set -ex && \
    apk --no-cache add -q  ca-certificates util-linux && \
    mkdir /var/log/v2ray/ &&\
    chmod +x /usr/bin/v2ray/v2ctl && \
    chmod +x /usr/bin/v2ray/v2ray
#MODE could be tcp/kcp/websocket
#If you leave UUID to a null value ,the it would use a random ,and you could read it in 'docker logs '
ENV PATH=/usr/bin/v2ray:$PATH MODE=tcp kcpheader=wechat-video UUID= tls= URL= 
RUN mkdir -p /etc/v2ray/ \
    && mkdir -p /Cert/ \
    && echo $' \
{ \n\
  "log" : {\n\
    "access": "/var/log/v2ray/access.log",\n\
    "error": "/var/log/v2ray/error.log",\n\
    "loglevel": "warning"\n\
  },\n\
  "inbound": {\n\
    "port": 8001,\n\
    "protocol": "vmess",\n\
    "settings": {\n\
      "clients": [\n\
        {\n\
          "id": "UUID",\n\
          "level": 1,\n\
          "alterId": 64\n\
        }\n\
      ]\n\
    }\n\
  },\n\
  "streamSettings": {\n\
      "network": "tcp"\n\
  },\n\
  "outbound": {\n\
    "protocol": "freedom",\n\
    "settings": {}\n\
  },\n\
  "outboundDetour": [\n\
        {\n\
            "protocol": "blackhole",\n\
            "settings": {},\n\
            "tag": "blocked"\n\
        }\n\
    ],\n\
    "routing": {\n\
        "strategy": "rules",\n\
        "settings": {\n\
            "rules": [\n\
                {\n\
                    "type": "field",\n\
                    "ip": [\n\
                        "0.0.0.0/8",\n\
                        "10.0.0.0/8",\n\
                        "100.64.0.0/10",\n\
                        "127.0.0.0/8",\n\
                        "169.254.0.0/16",\n\
                        "172.16.0.0/12",\n\
                        "192.0.0.0/24",\n\
                        "192.0.2.0/24",\n\
                        "192.168.0.0/16",\n\
                        "198.18.0.0/15",\n\
                        "198.51.100.0/24",\n\
                        "203.0.113.0/24",\n\
                        "::1/128",\n\
                        "fc00::/7",\n\
                        "fe80::/10"\n\
                    ],\n\
                    "outboundTag": "blocked"\n\
                }\n\
            ]\n\
        }\n\
    }\n\
}\n\
'> /etc/v2ray/config.json \
    && echo $' \
    [ "${UUID}" = "" ] && UUID=$(uuidgen) \n\
    echo -e "################################################" \n\
    echo -e "#####  \e[0;32mYOUR UUID IS : \e[0m                    ######" \n\
    echo -e "##### \e[0;31m${UUID} \e[0m#####" \n\
    echo -e "################################################" \n\
    apk -q del util-linux  \n\
    sed -i "s#UUID#${UUID}#g" /etc/v2ray/config.json  \n\
    case $MODE in \n\
    tcp)\n\
     if [  "${tls}" = "yes" ]; then\n\
        if [ "${URL}" !=  "" ] ; then \n\
        sed -i "s#YOURSERVERNAME#${URL}#g" /etc/v2ray/config.json >/dev/null 2>&1 \n\ 
        echo -e "Now \e[0;32mV2RAY\e[0m would startup in \e[0;31m TLS \e[0m mode"\n\
        echo -e "The \e[0;32mURL \e[0m was set to  \e[0;31m ${URL} \e[0m "\n\
        else \n\
        echo -e "IF Your Want to use \e[0;31mTLS\e[0m , you should specified a \e[0;32mURL\e[0m and certificates." \n\
        fi\n\
    else\n\
        echo -e "Now \e[0;32mV2RAY\e[0m would startup in \e[0;31mnon-tls\e[0m status"\n\
    fi\n\
    ;;\n\
    kcp)\n\
    sed -i "s/\\"tcp\\"/\\"kcp\\",\\n\\t\\"kcpSettings\\"\: {\\n\\t\\t\\"mtu\\"\: 1350, \\n\\t\\t\\"tti\\"\: 20,\\n\\t\\t\\"uplinkCapacity\\"\: 5, \\n\\t\\t\\"downlinkCapacity\\"\: 100,\\n\\t\\t\\"congestion\\"\: false,\\n\\t\\t\\"readBufferSize\\"\: 1,\\n\\t\\t\\"writeBufferSize\\"\: 1,\\n\\t\\t\\"header\\"\: {\\n\\t\\t\\t\\"type\\"\: \\"none\\"\\n\\t\\t\\t}\\n\\t}\\n/g" /etc/v2ray/config.json  \n\
  if  [ "${kcpheader}" != "none" ]; then \n\
   sed -i "s#none#${kcpheader}#g" /etc/v2ray/config.json \n\
   echo -e "Now \e[0;32mV2RAY\e[0m would startup in \e[0;31mKCP\e[0m mode"\n\
   echo -e "\e[0;32mHTTP Header\e[0m was set to  \e[0;31m ${kcpheader}  \e[0m mode"\n\
   fi \n\
    ;; \n\
    websocket|ws) \n\
    sed -i "s/\\"tcp\\"/\\"ws\\"/g" /etc/v2ray/config.json \n\
    echo -e "Now \e[0;32mV2RAY\e[0m would startup in \e[0;31mWebsocket\e[0m mode"\n\
    ;; \n\
esac \n\

/usr/bin/v2ray/v2ray -config=/etc/v2ray/config.json \n\
    '>/entrypoint.sh  \
    && chmod a+x /entrypoint.sh \
    && sed -i '1i#!/bin/sh' /entrypoint.sh
EXPOSE 8001
VOLUME [/Cert]
ENTRYPOINT ["/entrypoint.sh"]
